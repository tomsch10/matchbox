"Id","Path","Slice Name","Alias(s)","Label","Min","Max","Must Support?","Is Modifier?","Is Summary?","Type(s)","Short","Definition","Comments","Requirements","Default Value","Meaning When Missing","Fixed Value","Pattern","Example","Minimum Value","Maximum Value","Maximum Length","Binding Strength","Binding Description","Binding Value Set","Code","Slicing Discriminator","Slicing Description","Slicing Ordered","Slicing Rules","Base Path","Base Min","Base Max","Condition(s)","Constraint(s)","Mapping: RIM Mapping"
"ENXP","ENXP","","","",1,*,"","","","null {[]} {[]}
","Base for all types and resources","The character string data type stands for text data, primarily intended for machine processing (e.g., sorting, querying, indexing, etc.) Used for names, symbols, and formal expressions.","","","","","","","","","",,,,,"",,,,"Base",0,*,"","text-null:xmlText and nullFlavor are mutually exclusive (one must be present) {(xmlText | nullFlavor).count() = 1}
","n/a"
"ENXP.nullFlavor","ENXP.nullFlavor","","","Exceptional Value Detail",0,1,"","","","code {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/cs-simple]]} {[]}
","","If a value is an exceptional value (NULL-value), this specifies in what way and why proper information is missing.","","","","","","","","","",,"required","","http://hl7.org/cda/stds/core/ValueSet/CDANullFlavor","",,,,"ANY.nullFlavor",0,1,"",""
"ENXP.representation","ENXP.representation","","","",0,1,"","","","code {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/cs-simple]]} {[]}
","","Specifies the representation of the binary data that is the content of the binary data value","","","","","<valueCode xmlns=""http://hl7.org/fhir"" value=""TXT""/>","","","","",,,,,"",,,,"ST.representation",0,1,"",""
"ENXP.mediaType","ENXP.mediaType","","","Media Type",0,1,"","","","code {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/cs-simple]]} {[]}
","","Identifies the type of the encapsulated data and identifies a method to interpret or render the data.","","","","","<valueCode xmlns=""http://hl7.org/fhir"" value=""text/plain""/>","","","","",,,,,"",,,,"ST.mediaType",0,1,"",""
"ENXP.language","ENXP.language","","","Language",0,1,"","","","code {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/cs-simple]]} {[]}
","","For character based information the language property specifies the human language of the text.","","","","","","","","","",,,,,"",,,,"ST.language",0,1,"",""
"ENXP.xmlText","ENXP.xmlText","","","",0,1,"","","","string {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/st-simple]]} {[]}
","Allows for mixed text content","","This element is represented in XML as textual content. The actual name ""xmlText"" will not appear in a CDA instance.","","","","","","","","",,,,,"",,,,"ST.xmlText",0,1,"",""
"ENXP.partType","ENXP.partType","","","Name Part Type Code",0,1,"","","","code {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/cs-simple]]} {[]}
","","Indicates whether the name part is a given name, family name, prefix, suffix, etc.","","","","","","","","","",,"required","","http://terminology.hl7.org/ValueSet/v3-EntityNamePartType","",,,,"ENXP.partType",0,1,"",""
"ENXP.qualifier","ENXP.qualifier","","","Qualifier Code",0,*,"","","","code {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/cs-simple]]} {[]}
","","qualifier is a set of codes each of which specifies a certain subcategory of the name part in addition to the main name part type. For example, a given name may be flagged as a nickname, a family name may be a pseudonym or a name of public records.","","","","","","","","","",,"required","","http://hl7.org/cda/stds/core/ValueSet/CDAEntityNamePartQualifier","",,,,"ENXP.qualifier",0,*,"",""
