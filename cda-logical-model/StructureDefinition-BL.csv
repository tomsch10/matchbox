"Id","Path","Slice Name","Alias(s)","Label","Min","Max","Must Support?","Is Modifier?","Is Summary?","Type(s)","Short","Definition","Comments","Requirements","Default Value","Meaning When Missing","Fixed Value","Pattern","Example","Minimum Value","Maximum Value","Maximum Length","Binding Strength","Binding Description","Binding Value Set","Code","Slicing Discriminator","Slicing Description","Slicing Ordered","Slicing Rules","Base Path","Base Min","Base Max","Condition(s)","Constraint(s)","Mapping: RIM Mapping"
"BL","BL","","","",1,*,"","","","null {[]} {[]}
","Base for all types and resources","The Boolean type stands for the values of two-valued logic. A Boolean value can be either true or false, or, as any other value may be NULL.","","","","","","","","","",,,,,"",,,,"Base",0,*,"","value-null:value and nullFlavor are mutually exclusive (one must be present) {(value | nullFlavor).count() = 1}
","n/a"
"BL.nullFlavor","BL.nullFlavor","","","Exceptional Value Detail",0,1,"","","","code {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/cs-simple]]} {[]}
","","If a value is an exceptional value (NULL-value), this specifies in what way and why proper information is missing.","","","","","","","","","",,"required","","http://hl7.org/cda/stds/core/ValueSet/CDANullFlavor","",,,,"ANY.nullFlavor",0,1,"",""
"BL.value","BL.value","","","",0,1,"","","","boolean {[CanonicalType[http://hl7.org/cda/stds/core/StructureDefinition/bl-simple]]} {[]}
","","The Boolean type stands for the values of two-valued logic. A Boolean value can be either true or false, or, as any other value may be NULL.","","","","","","","","","",,,,,"",,,,"BL.value",0,1,"",""
